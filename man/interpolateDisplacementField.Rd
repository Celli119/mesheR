% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/displacementField.r
\name{interpolateDisplacementField}
\alias{interpolateDisplacementField}
\title{evaluate a displacement field using gaussian smoothed interpolation of a discrete displacement field}
\usage{
interpolateDisplacementField(dispfield, points, k = 10, sigma = 20,
  gamma = 1, threads = parallel::detectCores())
}
\arguments{
\item{dispfield}{displacement field created using \link{\code{createDisplacementField}}}

\item{points}{matrix or mesh3d at which to evaluate the interpolated displacement field}

\item{k}{integer: number of k closest points to evaluate.}

\item{sigma}{sigma controls the weight of the neighbourhood by defining the standard-deviation for the gaussian smoothing}

\item{gamma}{dampening factor (displacement vectors will be divided by \code{gamma}}

\item{threads}{integer: number of threads to use for computing the interpolation.}
}
\value{
returns an interpolated displacement field of class \code{displacement_field} at the positions of \code{points}.
}
\description{
evaluate a displacement field using gaussian smoothed interpolation of a given discrete displacement field
}
\examples{
require(Rvcg);require(Morpho)
data(dummyhead)
humoff <- meshOffset(dummyhead.mesh,offset=5)
dispfield <- createDisplacementField(dummyhead.mesh,humoff)
\dontrun{
## this only runs with latest Rvcg build from master
highres <- vcgSubdivide(dummyhead.mesh)
ifield <- interpolateDisplacementField(dispfield,highres,threads=2,sigma = 50,k=500)
}
}

